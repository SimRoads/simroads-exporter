name: Export TS Data

on:
  workflow_dispatch:
    inputs:
      game:
        required: true
        type: choice
        options:
          - Euro Truck Simulator 2
          - American Truck Simulator
      mods:
        required: false
        type: string
      export_name:
        required: true
        type: string
  workflow_call:
    inputs:
      game:
        required: true
        type: choice
        options:
          - Euro Truck Simulator 2
          - American Truck Simulator
      mods:
        required: false
        type: string
      export_name:
        required: true
        type: string

jobs:
  download-game:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        with:
          key: "steam_folder"
          path: "~/Steam"

      - name: Setup Python
        run: pip3 install requests

      - uses: CyberAndrii/setup-steamcmd@v1
      - uses: CyberAndrii/steam-totp@v1
        id: steam-totp
        with:
          shared_secret: ${{ secrets.STEAM_SHARED_SECRET }}

      - name: Install Game
        env:
          STEAMCMD_USER: ${{ secrets.STEAM_USER }}
          STEAMCMD_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          STEAMCMD_TOTP: ${{ steps.steam-totp.outputs.code }}
          INPUT_GAME: ${{ inputs.game }}
        run: |
          import os
          import requests
          user = os.getenv("STEAMCMD_USER")
          password = os.getenv("STEAMCMD_PASSWORD")
          totp = os.getenv("STEAMCMD_TOTP")
          game = os.getenv("INPUT_GAME")
          app_id = 227300 if game == "Euro Truck Simulator 2" else 270880
          r = requests.get(f"https://store.steampowered.com/api/appdetails?appids={app_id}").json()
          with open("download_list.txt", "w") as f:
              apps = [str(app_id)] + [str(dlc) for dlc in r[str(app_id)]["data"]["dlc"]]
              f.write("\n".join(["app_update " + app + " validate" for app in apps]) + "\nquit")
          os.system(f"steamcmd +login {user} {password} {totp} +quit +runscript {os.getcwd()}/download_list.txt")
        shell: python
        
  export-data:
    needs: download-game
    runs-on: ubuntu-latest
    steps:
    - uses: actions/cache@v4
      with:
        key: "steam_folder"
        path: "~/Steam"

    - uses: actions/download-artifact@v4
      with:
        name: "TsMap.Exporter-linux"
        path: "bin"
      
    - name: Export Data
      run: ./bin/TsMap.Exporter.linux-x64.bin ~/Steam/steamapps/common/${{ inputs.game }} ${{ inputs.export_name }}.zip
        
    - uses: actions/upload-artifact@v4
      with:
        name: "${{ inputs.export_name }}.zip"
        path: "${{ inputs.export_name }}.zip"